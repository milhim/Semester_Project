/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graph;

import java.util.Random;

/**
 *
 * @author Milhim
 */
public class ColoringALgorithm extends javax.swing.JFrame {

    Graph1 g, g1;

    /**
     * Creates new form ColoringALgoeithm
     */
    public ColoringALgorithm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphSize = new javax.swing.JTextField();
        createGraph = new javax.swing.JButton();
        sideOne = new javax.swing.JTextField();
        sideTwo = new javax.swing.JTextField();
        addEdge = new javax.swing.JButton();
        numberOfVertex = new javax.swing.JTextField();
        numberOfEdges = new javax.swing.JTextField();
        createRandomGraph = new javax.swing.JButton();
        NumberOfColor1 = new javax.swing.JTextField();
        time1 = new javax.swing.JTextField();
        colorButton1 = new javax.swing.JButton();
        NumberOfColor2 = new javax.swing.JTextField();
        time2 = new javax.swing.JTextField();
        colorButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        graphSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphSizeActionPerformed(evt);
            }
        });

        createGraph.setBackground(new java.awt.Color(0, 204, 102));
        createGraph.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        createGraph.setForeground(new java.awt.Color(0, 51, 255));
        createGraph.setText("Generate non-random Graph ");
        createGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createGraphActionPerformed(evt);
            }
        });

        sideOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideOneActionPerformed(evt);
            }
        });

        sideTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideTwoActionPerformed(evt);
            }
        });

        addEdge.setBackground(new java.awt.Color(0, 204, 102));
        addEdge.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        addEdge.setForeground(new java.awt.Color(0, 51, 255));
        addEdge.setText("Add Edge");
        addEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEdgeActionPerformed(evt);
            }
        });

        createRandomGraph.setBackground(new java.awt.Color(0, 204, 102));
        createRandomGraph.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        createRandomGraph.setForeground(new java.awt.Color(0, 51, 255));
        createRandomGraph.setText("Create Random Graph");
        createRandomGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRandomGraphActionPerformed(evt);
            }
        });

        NumberOfColor1.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N

        time1.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N

        colorButton1.setBackground(new java.awt.Color(255, 0, 51));
        colorButton1.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        colorButton1.setForeground(new java.awt.Color(255, 255, 255));
        colorButton1.setText("Applay Coloring algorithm 1");
        colorButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButton1ActionPerformed(evt);
            }
        });

        NumberOfColor2.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N

        time2.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N

        colorButton2.setBackground(new java.awt.Color(255, 0, 51));
        colorButton2.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        colorButton2.setForeground(new java.awt.Color(255, 255, 255));
        colorButton2.setText("Applay Coloring algorithm 2");
        colorButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("     Applying  Coloring Algorithm On a Random Graph");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Enter The Size OF Your Graph :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Enter The First Vertex Of Your Edge :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("Enter The Second Vertex Of Your Edge : ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("Number Of Vertex : ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Number Of Edges : ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Number Of Edges : ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Number Of Edges : ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Elapsed time : ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Elapsed time : ");

        jButton1.setBackground(new java.awt.Color(255, 0, 51));
        jButton1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Clear All Field");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel2)
                        .addGap(24, 24, 24)
                        .addComponent(graphSize, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(createGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel3)
                        .addGap(25, 25, 25)
                        .addComponent(sideOne, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(490, 490, 490)
                        .addComponent(addEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel4)
                        .addGap(12, 12, 12)
                        .addComponent(sideTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberOfVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfEdges, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addComponent(createRandomGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(colorButton1)
                        .addGap(159, 159, 159)
                        .addComponent(colorButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7)
                        .addGap(16, 16, 16)
                        .addComponent(NumberOfColor1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel8)
                        .addGap(16, 16, 16)
                        .addComponent(NumberOfColor2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel10)
                        .addGap(19, 19, 19)
                        .addComponent(time1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel9)
                        .addGap(39, 39, 39)
                        .addComponent(time2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(graphSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(createGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(sideOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(addEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(sideTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numberOfVertex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(numberOfEdges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(createRandomGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(colorButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colorButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(NumberOfColor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(NumberOfColor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(time1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(time2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void graphSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_graphSizeActionPerformed

    private void colorButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButton1ActionPerformed
        long start = System.nanoTime();
        g.colorFunction1();
        long end = System.nanoTime();
        double totalTime = (double) (end - start) / 1000000000;
        double modTime = (double) (end - start) % 1000000000;
        long max = 0;
        for (int i = 0; i < g.color.length; i++) {
            if (g.color[i] > max) {
                max = g.color[i];
            }
        }
        max = max + 1;
        NumberOfColor1.setText(max + " Color to Coloring The Graph");
        time1.setText("Coloring toke : " + (int) totalTime + "." + (int) modTime + " sec. ");
        // TODO add your handling code here:
    }//GEN-LAST:event_colorButton1ActionPerformed

    private void sideOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideOneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sideOneActionPerformed

    private void colorButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButton2ActionPerformed
        long start = System.nanoTime();
        g1.colorFunction2();
        long end = System.nanoTime();
        double totalTime = (double) (end - start) / 1000000000;
        double modTime = (double) (end - start) % 1000000000;
        long max = 0;
        for (int i = 0; i < g.color.length; i++) {
            if (g.color[i] > max) {
                max = g.color[i];
            }
        }
        max = max + 1;
        NumberOfColor2.setText(max + " Color to Coloring The Graph");
        time2.setText("Coloring toke : " + (int) totalTime + "." + (int) modTime + " sec. ");
    }//GEN-LAST:event_colorButton2ActionPerformed

    private void createGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createGraphActionPerformed
        g = new Graph1(Integer.parseInt(graphSize.getText()));
        g1 = new Graph1(Integer.parseInt(graphSize.getText()));
        // TODO add your handling code here:
    }//GEN-LAST:event_createGraphActionPerformed

    private void addEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEdgeActionPerformed
        g.addEdge(Integer.parseInt(sideOne.getText()), Integer.parseInt(sideTwo.getText()));
        g1.addEdge(Integer.parseInt(sideOne.getText()), Integer.parseInt(sideTwo.getText()));

        sideOne.setText("");
        sideTwo.setText("");

        // TODO add your handling code here:
    }//GEN-LAST:event_addEdgeActionPerformed

    private void createRandomGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRandomGraphActionPerformed
        Random edg1 = new Random();
        Random edg2 = new Random();
        int size = Integer.parseInt(numberOfVertex.getText());

        g = new Graph1(size);
        g1 = new Graph1(size);
        int n = Integer.parseInt(numberOfEdges.getText());
        int x = edg1.nextInt(size);
        int y = edg2.nextInt(size);
        while (n > 0) {

            int i = edg1.nextInt(size);
            while (x == i) {
                i = edg1.nextInt(size);
            }

            int j = edg2.nextInt(size);
            while (y == j) {
                j = edg1.nextInt(size);
            }

            x = i;
            y = j;
            if (x == y) {
                continue;
            } else {
                g.addEdge(x, y);
                g1.addEdge(x, y);
            }

            n--;
        }        // TODO add your handling code here:
    }//GEN-LAST:event_createRandomGraphActionPerformed

    private void sideTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideTwoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sideTwoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        graphSize.setText("");
        numberOfEdges.setText("");
        numberOfVertex.setText("");
        NumberOfColor1.setText("");
        NumberOfColor2.setText("");
        time1.setText("");
        time2.setText("");
        sideOne.setText("");
        sideTwo.setText("");

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ColoringALgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ColoringALgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ColoringALgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ColoringALgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ColoringALgorithm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NumberOfColor1;
    private javax.swing.JTextField NumberOfColor2;
    private javax.swing.JButton addEdge;
    private javax.swing.JButton colorButton1;
    private javax.swing.JButton colorButton2;
    private javax.swing.JButton createGraph;
    private javax.swing.JButton createRandomGraph;
    private javax.swing.JTextField graphSize;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField numberOfEdges;
    private javax.swing.JTextField numberOfVertex;
    private javax.swing.JTextField sideOne;
    private javax.swing.JTextField sideTwo;
    private javax.swing.JTextField time1;
    private javax.swing.JTextField time2;
    // End of variables declaration//GEN-END:variables
}
